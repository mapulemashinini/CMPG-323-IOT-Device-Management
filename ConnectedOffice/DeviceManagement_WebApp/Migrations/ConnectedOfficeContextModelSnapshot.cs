// <auto-generated />
using System;
using DeviceManagement_WebApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeviceManagement_WebApp.Migrations
{
    [DbContext(typeof(ConnectedOfficeContext))]
    partial class ConnectedOfficeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DeviceManagement_WebApp.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("DeviceManagement_WebApp.Models.Device", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .HasColumnName("DeviceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ZoneId")
                        .HasColumnName("ZoneID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DeviceId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ZoneId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("DeviceManagement_WebApp.Models.Zone", b =>
                {
                    b.Property<Guid>("ZoneId")
                        .HasColumnName("ZoneID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ZoneDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZoneId");

                    b.ToTable("Zone");
                });

            modelBuilder.Entity("DeviceManagement_WebApp.Models.Device", b =>
                {
                    b.HasOne("DeviceManagement_WebApp.Models.Category", "Category")
                        .WithMany("Device")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Device_Category")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DeviceManagement_WebApp.Models.Zone", "Zone")
                        .WithMany("Device")
                        .HasForeignKey("ZoneId")
                        .HasConstraintName("FK_Device_Zone")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
